{"version":3,"sources":["Filter.js","AddNew.js","Person.js","Numbers.js","services/persons.js","Notification.js","App.js","index.js"],"names":["Filter","filterBy","filterPersons","type","value","onChange","AddNew","addPerson","newPerson","handlePerson","handlePhone","onSubmit","name","number","Person","person","deletePerson","onClick","Numbers","filteredPersons","length","map","id","baseUrl","personsService","getPersons","axios","get","then","res","data","createPerson","personObject","post","delete","updatePerson","put","Notification","notification","className","message","App","useState","persons","setPersons","setNewPerson","setFilterBy","setNotification","useEffect","filter","toUpperCase","includes","event","target","preventDefault","indexInPhonebook","findIndex","concat","setTimeout","catch","error","response","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3669ea00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({filterBy, filterPersons}) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                <label>filter shown with </label>\r\n                <input type=\"text\" value={filterBy} onChange={filterPersons}/>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Filter\r\n","import React from 'react';\r\n\r\nconst AddNew = ({addPerson, newPerson, handlePerson, handlePhone}) => {\r\n    return (\r\n        <>\r\n            <h2>add a new</h2>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    <div>\r\n                        <label>name </label>\r\n                        <input type=\"text\" value={newPerson.name} onChange={handlePerson}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>phone </label>\r\n                        <input type=\"text\" value={newPerson.number} onChange={handlePhone}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AddNew\r\n","import React from 'react';\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n    return (\r\n        <p>{person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button></p>\r\n    )\r\n};\r\n\r\nexport default Person\r\n","import React from 'react';\r\nimport Person from \"./Person\";\r\n\r\nconst Numbers = ({filteredPersons, deletePerson}) => {\r\n    return (\r\n        <>\r\n            <h2>Numbers</h2>\r\n            {filteredPersons.length > 0\r\n                ? filteredPersons.map(person => <Person key={person.id} person={person} deletePerson={deletePerson} />)\r\n                : <p>No persons found</p>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Numbers\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getPersons = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(res => res.data);\r\n};\r\n\r\nconst createPerson = (personObject) => {\r\n    const request = axios.post(baseUrl, personObject);\r\n    return request.then(res => res.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(res => res.data);\r\n};\r\n\r\nconst updatePerson = (id, personObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, personObject);\r\n    return request.then(res => res.data);\r\n};\r\n\r\nconst personsService = {getPersons, createPerson, deletePerson, updatePerson};\r\n\r\nexport default personsService\r\n","import React from 'react';\r\n\r\nconst Notification = ({notification}) => {\r\n    if (notification === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={notification.type}>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Filter from \"./Filter\";\nimport AddNew from \"./AddNew\";\nimport Numbers from \"./Numbers\";\nimport personsService from \"./services/persons\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newPerson, setNewPerson ] = useState({name: '', number: ''});\n  const [ filterBy, setFilterBy ] = useState('');\n  const [ notification, setNotification ] = useState(null);\n\n  useEffect(() => {\n      personsService.getPersons()\n          .then(res => setPersons(res));\n  }, []);\n\n  const handlePerson = (event) => setNewPerson({...newPerson, name: event.target.value});\n  const handlePhone = (event) => setNewPerson({...newPerson, number: event.target.value});\n\n  const filteredPersons = persons.filter(person => person.name.toUpperCase().includes(filterBy.toUpperCase()));\n\n  const addPerson = (event) => {\n      event.preventDefault();\n      const indexInPhonebook = persons.findIndex(person => person.name.toUpperCase() === newPerson.name.toUpperCase());\n      const personObject = {\n          name: newPerson.name,\n          number: newPerson.number\n      };\n      if (indexInPhonebook === -1) {\n          personsService.createPerson(personObject)\n              .then(res => {\n                  setPersons(persons.concat(res));\n                  setNewPerson({name: '', number: ''});\n                  setNotification({type: 'success', message: `Added ${personObject.name}`});\n                  setTimeout(() => {\n                      setNotification(null);\n                  }, 5000);\n              })\n              .catch(error => {\n                  setNotification({type: 'error', message: error.response.data.error});\n                  setTimeout(() => {\n                      setNotification(null);\n                  }, 5000);\n              })\n      } else {\n          let replaceNumber = window.confirm(`${newPerson.name} is already added to notebook, replace old number with new one?`);\n          if(replaceNumber) {\n              personsService.updatePerson(persons[indexInPhonebook].id, personObject)\n                  .then(res => {\n                      personsService.getPersons()\n                          .then(res => setPersons(res));\n                      setNewPerson({name: '', number: ''});\n                  })\n                  .catch(error => {\n                      setNotification({type: 'error', message: `${personObject.name}'s data has already been removed from the server`});\n                      setTimeout(() => {\n                          setNotification(null);\n                      }, 5000);\n                  });\n          } else {\n              setNewPerson({name: '', number: ''});\n          }\n      }\n  };\n\n  const deletePerson = (person) => {\n      let confirmDelete = window.confirm(`delete ${person.name}?`);\n      if(confirmDelete) {\n          personsService.deletePerson(person.id)\n              .then(res => {\n                  personsService.getPersons()\n                      .then(res => setPersons(res));\n              });\n      }\n  };\n\n  const filterPersons = (event) => {\n    setFilterBy(event.target.value);\n  };\n\n\n  return (\n      <div>\n          <Filter filterBy={filterBy} filterPersons={filterPersons}/>\n\n          <h2>Phonebook</h2>\n\n          <Notification notification={notification} />\n\n          <AddNew addPerson={addPerson} newPerson={newPerson} handlePerson={handlePerson} handlePhone={handlePhone}/>\n\n          <Numbers filteredPersons={filteredPersons} deletePerson={deletePerson} />\n      </div>\n  )\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}